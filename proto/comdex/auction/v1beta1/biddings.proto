syntax = "proto3";
package comdex.auction.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/comdex-official/comdex/x/auction/types";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;

message Biddings {
    uint64 id = 1 [ 
        (gogoproto.moretags) = "yaml:\"id\""
    ];

    uint64 auction_id = 2 [
        (gogoproto.moretags) = "yaml:\"auction_id\""
    ];

    string auction_status = 3 [ 
        (gogoproto.moretags) = "yaml:\"auction_status\""
    ];

    string bidder = 4 [
        (gogoproto.moretags) = "yaml:\"bidder\"",
        (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.AccAddress"
    ];

    cosmos.base.v1beta1.Coin bid = 5 [
        (gogoproto.nullable) = false,
        (gogoproto.moretags)   = "yaml:\"bid\"",
        (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.Coin"
    ];

    google.protobuf.Timestamp bidding_timestamp = 6 [
        (gogoproto.nullable) = false, 
        (gogoproto.stdtime) = true,
        (gogoproto.moretags)   = "yaml:\"bidding_timestamp\""
    ];

    string bidding_status = 7 [ 
        (gogoproto.moretags) = "yaml:\"bidding_status\""
    ];

}

message UserBiddings {
    uint64 id = 1 [ 
        (gogoproto.moretags) = "yaml:\"id\""
    ];

    string bidder = 2 [
        (gogoproto.moretags) = "yaml:\"bidder\""
    ];

    repeated uint64 bidding_ids = 3 [
        (gogoproto.moretags) = "yaml:\"bidding_ids\""
    ];
}