syntax = "proto3";
package comdex.auction.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/comdex-official/comdex/x/auction/types";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;

message Coin {
    option (gogoproto.equal) = true;
  
    string denom  = 1;
    string amount = 2 [
        (gogoproto.customtype) = "Int", 
        (gogoproto.nullable) = false
    ];
}

message CollateralAuction {
    uint64 id = 1 [ 
        (gogoproto.moretags) = "yaml:\"id\""
    ];
    uint64 locked_vault_id = 2 [ 
        (gogoproto.moretags) = "yaml:\"locked_vault_id\""
    ];
    Coin collateral = 3 [
        (gogoproto.nullable) = false,
        (gogoproto.moretags)   = "yaml:\"liquidation_collateral\"",
        (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.Coin"
    ];
    Coin debt = 4 [
        (gogoproto.nullable) = false,
        (gogoproto.moretags)   = "yaml:\"debt_recovery\"",
        (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.Coin"
    ];
    string bidder = 5 [
        (gogoproto.moretags) = "yaml:\"owner\"",
        (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.AccAddress"
    ];
    Coin bid = 6 [
        (gogoproto.nullable) = false,
        (gogoproto.moretags)   = "yaml:\"bid\"",
        (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.Coin"
    ];
    Coin max_bid = 8 [
        (gogoproto.nullable) = false,
        (gogoproto.moretags)   = "yaml:\"max_bid\"",
        (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.Coin"
    ];
    google.protobuf.Timestamp end_time = 7 [
        (gogoproto.nullable) = false, 
        (gogoproto.stdtime) = true,
        (gogoproto.moretags)   = "yaml:\"end_time\""
    ];
  }