syntax = "proto3";
package comdex.bandoracle.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "comdex/bandoracle/v1beta1/fetch_price.proto";
import "comdex/bandoracle/v1beta1/params.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/comdex-official/comdex/x/bandoracle/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/comdex/bandoracle/v1beta1/params";
  }

  // FetchPriceResult defines a rpc handler method for MsgFetchPriceData.
  rpc FetchPriceResult(QueryFetchPriceRequest) returns (QueryFetchPriceResponse) {
    option (google.api.http).get = "/comdex/bandoracle/v1beta1/fetch_price_result/{request_id}";
  }

  // LastFetchPriceId query the last FetchPrice result id
  rpc LastFetchPriceId(QueryLastFetchPriceIdRequest) returns (QueryLastFetchPriceIdResponse) {
    option (google.api.http).get = "/comdex/bandoracle/v1beta1/last_fetch_price_id";
  }
  // this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.moretags) = "yaml:\"params\"",
    (gogoproto.nullable) = false
  ];
}

message QueryFetchPriceRequest {int64 request_id = 1;}

message QueryFetchPriceResponse {
  FetchPriceResult result = 1;
}

message QueryLastFetchPriceIdRequest {}

message QueryLastFetchPriceIdResponse {int64 request_id = 1;}

// this line is used by starport scaffolding # 3
